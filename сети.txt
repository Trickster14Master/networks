- Методы передачи данных 
	- Семплексный
		- передача строго в одном напраалении 
	- Полудумплексный 
		- передача в оба направления но по переменно 
	- Думплексный 
		- передача в оба направления
- Протокол
	- стандарт, описывающий правила взаимодействия функциональных блоков при передаче данных
	- Класификация:
		с установление соединения (точная передача данных)
		покой - соединение - передача - разрыв - покой 
		без установления 
		покой - передача - покой 
- Сеть  
	-Набор узлов связанных между собой
	lan - локальная
	wan - глобальная 
	Топологии:
		- звезда-центральное устройство через которое осуществляется связь компьютеров (комутатор)
		- кольцо-компьютер соединяется с двумя соседними компьютероми
		- дерево-компьютер с сетевым оборудованием образуют из себя схему дерева


Дисциплины передачи информации между узлами 
иерархическая
	- часть узлов определяет режим работы других узлов 
одноранговая 
	- все узлы равны между собой 
			решение проблемы одновременной отправки информации узлами 
			CSMA/CD- множественный доступ с контролем несущей и обноружение колекций - работает в топологии шина, с начала конал прослушивается на занятость. Ели устройство одновременно начали передовать данный, они перестают это делать и ставят случайный таймер до следующей отправки 
			детерминированный метод- работает в топологии кольцо, в нутри сети по очерёдно передаётся право передовать данный 

этолонная модель взаимодействий открытых систем OSI/ISO

приложение 
представление 
сеансовый 
транспортный 
сетевой 
канальный  		
физический 	


передача данных 
PDU 
на каждом уровне заголовок и хвостовик обновляются новыми данными 
Заголовок | данные | хвостовик 

-------------
Локальные сети
	Задачи 
		- Совместное использование данных и приложений 
		- Совместное использование ресурсов 
		- Доступ к другим сетям 
	Компоненты 
		- Конечные устройства (пк, серверы, принтеры)
		- Соединительные устройства (сетевые адаптеры, среды передачи)
		- Сетевые устройства (концентраторы, комутаторы, маршрутизаторы)
		- протоколы 

	Коммутатор - устройство, предназначенное для соединения нескольких узлов компьютерной сети в пределах одного или нескольких сегментов сети
		Методы передачи комутатора 
			- С буфиризацией = С начало помещается в буфер комутатора проверяется на наличие ошибок и только потом отправляется 
			- Без буфеизации = сразуже отправляется получателю 
			- Бесфрагментная = только первые 64 байта попадают в буфер 
		Функции коммутатора 
			- Пересылка = простая отправка от одного пользователя другому 
			- Лавинная рассылка = Если адресат не извесятен отправляется всем 
			- Фильтрация = удаление данных прешедших из одного фрагмента сети 
			!картинка!
		Таблица коммутации
			Структура = Интерфейс | MAC-адрес / Fa0/1 | DC-85-DE-CC-03-EO
			Cтатическая = Сис самостоятельно все определил 
			Динамическая = Сомостоятельно создаётся коммутатором, обновляется при каждом новом узлом сети 

	MAC-адрес устройства = Уникальный физический адрес аборудования созданный на предприятии, создайтся в 16ричной системе. Первые 24 бита предприятии на котором было созданно стройство, другие 24 бита имя самого устройства 

	Ethernet 2 = Позволяет определить от кого и кому 
	!картинка! 

--------------------
Cетовой уровень 
	структура ip
		!картинка!
		!картинка!
		version= записывается номер версии протокола ip
		Internet Header Length= длина заголовка 
		Service Type= тип сервила, нужен для обеспичения качества обслуживания
			тип сервиса 
			P_P_P_D_T_R_ECN
			P-приоритет
			D- задержание 
			T-пропускная способность 
			R- надёжность
			ECN- явное сообщение о задержании, показывает возможность переполнения буфира, и если буфер будет переполнен передовать либо приостонавиться или замедлится 

		Packet Length=  длина пакета 
		identification=  выдает всем фрагментам пакета одинаковый индификатор
		Flags= флаг
			структура 
			X|F|L
			X= зарезервирован и его значение равно нулю
			F= показывет разрешина ли фрагментация пакета 
			L= показывает является ли данный фрагмент последним в серии или нет 

		Offset=указывает в какой последовательность идут фрагменты пакета 
		Time to live= показывает сколько промежуточных устройств может пройти пакет перед уничтожением 
		Protocol=содержет код протоокола которому надо передать пакет 
		Header Checksum= позволяет определить наличие ошибок в пакете 
		Source Address= адрес источника 
		Destination Address= адрес получателя 
		##Параметры (опции)##
			класс0-дейтеграммы пользователя, можно заложить чётко указанный путь
			класс1-зарезервирован
			класс2-отладка измерения (диогностика)
			класс3-зарезервирован

	Адресация IP_addres
		Network address | Host adress
		Адрес сети      | Адрес хоста 
		состаит из 32 бит разделённые на 4 актета 
		пример 192.168.1.1

		Типы адресации 
		Маска- показывает граници сетки сать хост
			Классовая:
				Класс A- первые 8, частные ip адреса 10.0.0.0-10.255.255.255
				Класс B- первые 16, частные ip адреса 172.16.0.0 172.16.255.255
				Класс C- первые 24, частные ip адреса 192.168.0.0-192.168.255.255
				Класс D- нет граници сеть хост, преднозначен для групповой рассылки 
				Как определить
				!картинка!
				Маска- показывает граници сетки сать хост
							Класс A= адрес сети находится только в первом актете, ip/маск=10.0.0.0/255.0.0.0
							Класс B
							Класс C
			Бессклассовая- 
			VLSM= состоит из  Адрес сети/Адрес подсети/Адрес хоста  используется для нумерации под сети, путём выделения битов в определённый актет мы можем создать ip адреса для подсетей 
			!картинка!
			CIDR= состоит только и адрес сети/аддрес хоста, адрес сети заложен в первые 5 битов первого актета 
			!картинка!

		
	ARP=благодаря даному протоколу находится mac адрес с помощью ip адресса 
	структура 
	!картинка!
	1= тип адреса который нужно узнать (MAC)
	2= тип адреса сетевого уровня (IP)
	3= длина в байтах физического адреса который нужно найти (48 бит (MAC))
	4= длина адреса сетевого уровня (4 байта (IP))
	5= поперация, содержет в себе либо запрос либо ответ 
	6= физический адрес устройства делующего запрос 
	7= сетивой адрес устройства делующего запрос 
	8= искомый mac адрес 
	9= ip адрес по которому мы ищес mac 

	DHCP 
	Задачи:
	1. раздача IP-адреса, маски
	2. Шлюз по умолчанию (адрес ближайшего маршрутизатора)
	3. Адреса DNS-сервера 

	ICMP-протокол межсетевых управляющий собщениями, как правило сообщает об ошибках 
	структура:
	Type- показывает общее значение пакета 
	Code- дополнительный уровень детализации
	Checksum- 
	Data-
--------------

VLAN= Виртуальная локальная сеть. Ограничение щироко вещательного домена.
	Благодоря протоколу IEEE 802.1Q добовляется новое teg поле в кадор. Благодоря которому маршрутизатор (и тд) понимает к какому участку виртуальной сети адресован запрос.
	VLAN= участок виртуальной лоальной сети 
	VTP= преднозначен для обмена информации о VLAN между коммутаторами 
		Информация о VLAN
		1 создание VLAN
		2 Переименование VLAN
		3 Удаление VLAN 
	Пежим работы коммутатора 
	1 Сервер
	2 Клиент
	3 Прозрачный 
----------------------------

STP= резервное маршрутизирование 
	!картинка!
	Продлемы резервного маршрутизирования 
	1. Широковещательные штормы
	2. Множественные копии кадров 
	3. Не стабильные таблици коммутации 
	Решение. Логическое блокирование физического маршрута 

	Построение дерева:
		1. Выбор корневого свича(моста). Выбирается на основе приоретета каммутатора 
		2. Выбор корневого порта. Минимальнгое по стоимости маршрут.
		3. Выбор назначенного порта.
		4. Блокировка основных портов 
		Процесс становления порта.
			1. Блокировка
			2. Прослушивание 
			3. Изучение 
			4. Передача
-------
Маршрутизация

Маршрутизация- оптимальное построение маршрута внутри сети.
	Таблица маршрутизации.
		IP-адрес сети
		Администротивное расстояние - показывает приоритет источника информации 
		Метрика - растояние 
		Адрес следующего маршрутизатора 
		Интерфейс выхода 
	Классы алгоритмов маршрутизации:
		1. Статические и динамические.
		2. Одномаршрутные и много маршрутные.
		3. Одноуровненые и много уровневые (иерархия)
		4. Алгоритмы с маршрутизацией от источника и без маршрутизации от источника (выбор маршрута лично илиже выбор маршрутизатора)
		5. Алгоритмы состояния канала и дистанционного-векторные 

	RIP- протокол диномической маршрутизации 
		Дистанционно-векторный= основываясь на таймере идёт рассалка сообщений с полной таблицей маршрутизации
		Метрика- количество промедуточных узлов
		Таймеры	
			Регулярная рассылка:
			Timeout:
			Garbage collection: (сборщик мусора)
		структура RIP ver 
		!картинка!
		1. Определение функционала сообщения.
		2. Версия
		3.
		4. Определяет тип используемого адреса
		5. Помогает отлечить внешний и внутренний маршрут друг от друга 
		6. адрес сети назначения
		7.
		8.
		9. Растояние до сети назначения 

	OSPF
		Харакиеристики.
			1. Протокол состояния канала. (обновления свединий о всех маршрутизаторах в сети)
			2. Иерархический протокол
			3. Метрика= 100 Мбит/с / Пропускная способность бит/с
			4. Алгоритм Дейкстры (нахождение оптимального пути).
			!картинка1!
			!картинка2!
		структура заголовка 
		!картинка3!
		1. Указывается номер версии протокола 
		2. Определяет функционал ссобщения 
			Типы сообщений
			1. Hello
			2. Описание топологической базы данных 
			3. Сообщеение о состояние конала 
			4. Сообщение об обновлении канала 
			5. Подтверждение получения 
		3. Длина пакета в байтах 
		4. Занимает 32 бита, выглядит как ip адрес
		5. Указание к какой облости атносится пакет 
		6. Проверка на ошибки 
		7. Тип аутентофикации 
			0. Отсутствие контроля доступа 
			1. аутентофикации открытым текстом 
			2. аутентофикации по средствам алгоритма MD5

	EIGRP
	структура 
	!картинка98!
		1. Быстрая конвергенция (пемнит все маршруты)
		2. Сниженное потребление полосы пропускания (нт широко вещательной рассылки, сообщения отправляются из за тригеров)
		3. Поддержка бессклассовой адресации.
		4. Применение метода выравнивания нагрузки.
		5. Простое суммирование маршрутов 

		Протокол EIGRP рабоает на основе 3 таблиц.
		1. Таблица соседей 
		!картинка4!
		2. Таблица топологий 
		!картинка5!
		3 Таблица маршрутизации
		!картинка6!

		Суммирование маршрутов
		!картинка7!

--------------
Адресация на транспортном уровне.

Трпнспортный урвень- представляет из себя порт преложения 
	Хорошо известные порты (0-1023), серверная честь 
	Зарегистрированные порты (1024-49151), используется на серверной часи приложения или в качестве источника 
	Динамические порты (49152-65635)

	TCP- надёжная передача сегментоа 
	!картинка8!
	1. Адрес для индификации приложения 
	2. Адрес для индификации приложения 
	3. Седержит порядковый номер первого байта данных которых передаются в сегменте 
	4. Номер последовательности ожидает получатель в следующий раз 
	5. Определяет начало и конец поля опции
	6. зарезервированное поле для дольнейшего обгрейда, занимаеи 6 бит
		первые 3 бита не заняты
		4. NS Контроль изменения бит ECN (поле протокол IP, отслеживающее скорость передачи данных)
		5. CWR окно перегрузки уменьшенно 
		6. ECE указывает на перегрузки сети 
	7. Виды флагов
		URG- поле "Указатель важности" задействованно
		ACK- подтверждение получения сегнала 
		PSH- данные, хронящиеся в буфере передать приожению 
		RST- сбрасывание соединения, отчистка буфера 
		SYN- установление соединения 
		FIN- закрытие соединения 
	8. Индифирицирует размер нформации 
	9. Определяет наличие ошибок в сигменте 
	10. Работает только с флагом URG
	11. Состоит из 3 полей 
		!картинка9! 
		1. Определяет функционал опции 
		2. Определяет где заканчиваются данные 
		3. Дынные опции несут исключительно служебную информацию 
		Виды данных опций 
			MSS- максимальное сизиент информации которое можно передать за транзакцию 
			Timestamp- определяет когда сигмент был отправлен 
-----
прекладной уровень

	DNS- превращение доменных имен в ip адрес 
	!картинка10!
	Корневой- отвечает за доменны 1-го уровня
	Домен 1- домен отчачающий за тереториальную пренодлежность, также некоторые организации имеют собственные домены 
	Ключерые характеристики 
	-Распределение администрирования 
	-Распределённость хранения информации
	-Кеширование информации
	-Резервирование 

	SMTP- отправка писем по почте 
	Алгоритм работцы 
	1. Установка TCP-соединени 
	2. Авторизация
	3. Указание с кокого имеила будет отправленно сообщение 
	4. Указание на какой ящик должно отправиться сообщение 
	5. Тело письма
	6. Выключение 

	POP3 vs IMAP4-получение почты 
	POP3- работает с почтой на клиенте 
	Режимы работы.
		Aторизация.
			User
			Pass
			Quit
		Передача.
			Start- общее количество сообщений
			List- обьём конкретного сообщения 
			Retr- Чтение содержимого письма 
			Dele- Пометить как удалённое
			Noop- Показывает что получатель ещё онлайн
			Rset- Снимает пометки о удалении 
		Обновление.
			- удоление помеченых писем 
	IMAP4- работает на сервере 

	FTP- передача данных между клиентом и сервером, работает сразу с двумя TCP соединениями 
	!картинка11!
	Первое TCP содинение нужно для передачи команд, другое для передачи данных, при каждой передачи данных создаётся новое TCP соединение.
	Режим работы сервера.
		Активный
		!картинка12!
		Поссивный
		!картинка13!
	Команды FTP
		1. Управление доступом
		2. Управление потоком
			1. Port- указание ip порта активного участника соединения, h1-h4,актеты ip адреса p1,p2, 
			2. Pasv- тоже самое что и Port только для пассивного участника соединенеия 
		3. FTP-сервис
			1. Retr filename- скачивание фаилов 
			2. Stor filename- передать фаил 
			3. Rnfr filename- периименовывание файла 
			4. Rnto filename- периименовывание файла
			5. Dele filename- удаление файла
			6. Mkd filename- создание дериктории 
			7. Rmd filename- периименовывание дериктории 
			8. List- содержимое дериктории 

	Telnet- управление удалённым устройством 
	Режим передачи 
		1. Полудуплексный
		2. Символьный- изменения происходят только после применения переданного символа 
		3. Условно строчный- информация отправляется одной строкой, эхо не применяется
		4. Строчный- отправляется целой строкой, эхо применимо 

	HTTP/HTTPS- представление файлов хронящихся на сервере в определённом формате 
	Принцип работы
		1. Установка TCP соединения 
		2. Формеровние и отправка запроса клиента 
		3. Формеровние и отправка ответа сервера
		4. Закрытие TCP соединения 
	Типы соединения
		Непостоянное- для каждого отдельного обьекта открывается отдельное TCP соединение
		Постоянное- обьекты отпровляются отдним бьльшим пакетом 


------------------
OSI
Уровень приложений: 
	приобразуют данные в приемлимый для прочтения для человека 
Уровень предстовлений:
	астраиваются и фарматируются данные для уровня приложения, кодируются и сжимаються данные.
Сеансовый уровень:
	поддерживает соединение между хостами. 
Транспортный уровень:
	передача данных. TCP, UDP 
Сетивой уровень:
	построение сети. IP, RIP, PING
	-Обьединение сетей
	-Маршрутизация 
	-Обеспечение качества обслуживан
Канальный уровень:
	определяет способ передачи данных. 
	передаёт сообщения по коналу связи (кадры)
	тут добавляются данные от кого и к кому. mac адреса. PPP, CDP, MPLS 
Физический ровень:
	передача потока бит по среде передачи данных
	Характеристики: 
		пропускная способность.
		задержка. 
		количество ошибок. 




 

